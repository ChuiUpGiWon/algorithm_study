from collections import deque

def solution(maps):
    answer = []
    dx = [1,-1,0,0]
    dy = [0,0,1,-1]
    visited = [[0] * len(maps[0]) for i in range(len(maps))]
    
    for i in range(len(maps)):
        for j in range(len(maps[0])):
            if maps[i][j] != 'X' and visited[i][j] != 1:
                num = int(maps[i][j])
                q = deque()
                visited[i][j] = 1
                q.append((i,j))
                
                while q:
                    y,x = q.popleft()
                    
                    for t in range(4):
                        nx = x + dx[t]
                        ny = y + dy[t]
                        
                        if 0 <= nx < len(maps[0]) and 0 <= ny < len(maps) and visited[ny][nx] != 1 and maps[ny][nx] != 'X':
                            visited[ny][nx] = 1
                            q.append((ny,nx))
                            num += int(maps[ny][nx])
                answer.append(num)
    if answer:
        answer.sort()
    else:
        answer.append(-1)
    return answer
